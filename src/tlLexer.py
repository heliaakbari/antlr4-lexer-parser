# Generated from tl.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,254,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
        1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
        1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,
        1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,23,
        1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,
        1,29,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,
        1,32,1,33,1,33,1,33,1,33,3,33,196,8,33,1,33,3,33,199,8,33,1,33,1,
        33,1,34,4,34,204,8,34,11,34,12,34,205,1,35,1,35,5,35,210,8,35,10,
        35,12,35,213,9,35,1,36,1,36,5,36,217,8,36,10,36,12,36,220,9,36,1,
        36,1,36,1,37,1,37,1,37,1,37,5,37,228,8,37,10,37,12,37,231,9,37,1,
        37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,5,38,242,8,38,10,38,12,
        38,245,9,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,229,0,40,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,79,40,1,0,9,1,0,46,46,1,0,101,101,1,0,45,45,
        1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,4,
        0,10,10,13,13,34,34,92,92,2,0,10,10,13,13,3,0,9,10,13,13,32,32,260,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,1,81,
        1,0,0,0,3,83,1,0,0,0,5,85,1,0,0,0,7,87,1,0,0,0,9,91,1,0,0,0,11,98,
        1,0,0,0,13,106,1,0,0,0,15,111,1,0,0,0,17,113,1,0,0,0,19,115,1,0,
        0,0,21,117,1,0,0,0,23,119,1,0,0,0,25,122,1,0,0,0,27,125,1,0,0,0,
        29,132,1,0,0,0,31,135,1,0,0,0,33,140,1,0,0,0,35,146,1,0,0,0,37,149,
        1,0,0,0,39,152,1,0,0,0,41,155,1,0,0,0,43,158,1,0,0,0,45,160,1,0,
        0,0,47,163,1,0,0,0,49,165,1,0,0,0,51,168,1,0,0,0,53,170,1,0,0,0,
        55,172,1,0,0,0,57,174,1,0,0,0,59,176,1,0,0,0,61,178,1,0,0,0,63,180,
        1,0,0,0,65,186,1,0,0,0,67,191,1,0,0,0,69,203,1,0,0,0,71,207,1,0,
        0,0,73,214,1,0,0,0,75,223,1,0,0,0,77,237,1,0,0,0,79,250,1,0,0,0,
        81,82,5,40,0,0,82,2,1,0,0,0,83,84,5,41,0,0,84,4,1,0,0,0,85,86,5,
        44,0,0,86,6,1,0,0,0,87,88,5,105,0,0,88,89,5,110,0,0,89,90,5,116,
        0,0,90,8,1,0,0,0,91,92,5,100,0,0,92,93,5,111,0,0,93,94,5,117,0,0,
        94,95,5,98,0,0,95,96,5,108,0,0,96,97,5,101,0,0,97,10,1,0,0,0,98,
        99,5,98,0,0,99,100,5,111,0,0,100,101,5,111,0,0,101,102,5,108,0,0,
        102,103,5,101,0,0,103,104,5,97,0,0,104,105,5,110,0,0,105,12,1,0,
        0,0,106,107,5,118,0,0,107,108,5,111,0,0,108,109,5,105,0,0,109,110,
        5,100,0,0,110,14,1,0,0,0,111,112,5,123,0,0,112,16,1,0,0,0,113,114,
        5,125,0,0,114,18,1,0,0,0,115,116,5,59,0,0,116,20,1,0,0,0,117,118,
        5,61,0,0,118,22,1,0,0,0,119,120,5,43,0,0,120,121,5,43,0,0,121,24,
        1,0,0,0,122,123,5,45,0,0,123,124,5,45,0,0,124,26,1,0,0,0,125,126,
        5,114,0,0,126,127,5,101,0,0,127,128,5,116,0,0,128,129,5,117,0,0,
        129,130,5,114,0,0,130,131,5,110,0,0,131,28,1,0,0,0,132,133,5,105,
        0,0,133,134,5,102,0,0,134,30,1,0,0,0,135,136,5,101,0,0,136,137,5,
        108,0,0,137,138,5,115,0,0,138,139,5,101,0,0,139,32,1,0,0,0,140,141,
        5,119,0,0,141,142,5,104,0,0,142,143,5,105,0,0,143,144,5,108,0,0,
        144,145,5,101,0,0,145,34,1,0,0,0,146,147,5,124,0,0,147,148,5,124,
        0,0,148,36,1,0,0,0,149,150,5,38,0,0,150,151,5,38,0,0,151,38,1,0,
        0,0,152,153,5,61,0,0,153,154,5,61,0,0,154,40,1,0,0,0,155,156,5,33,
        0,0,156,157,5,61,0,0,157,42,1,0,0,0,158,159,5,60,0,0,159,44,1,0,
        0,0,160,161,5,60,0,0,161,162,5,61,0,0,162,46,1,0,0,0,163,164,5,62,
        0,0,164,48,1,0,0,0,165,166,5,62,0,0,166,167,5,61,0,0,167,50,1,0,
        0,0,168,169,5,43,0,0,169,52,1,0,0,0,170,171,5,45,0,0,171,54,1,0,
        0,0,172,173,5,42,0,0,173,56,1,0,0,0,174,175,5,47,0,0,175,58,1,0,
        0,0,176,177,5,37,0,0,177,60,1,0,0,0,178,179,5,33,0,0,179,62,1,0,
        0,0,180,181,5,102,0,0,181,182,5,97,0,0,182,183,5,108,0,0,183,184,
        5,115,0,0,184,185,5,101,0,0,185,64,1,0,0,0,186,187,5,116,0,0,187,
        188,5,114,0,0,188,189,5,117,0,0,189,190,5,101,0,0,190,66,1,0,0,0,
        191,192,3,69,34,0,192,193,7,0,0,0,193,195,3,69,34,0,194,196,7,1,
        0,0,195,194,1,0,0,0,195,196,1,0,0,0,196,198,1,0,0,0,197,199,7,2,
        0,0,198,197,1,0,0,0,198,199,1,0,0,0,199,200,1,0,0,0,200,201,3,69,
        34,0,201,68,1,0,0,0,202,204,7,3,0,0,203,202,1,0,0,0,204,205,1,0,
        0,0,205,203,1,0,0,0,205,206,1,0,0,0,206,70,1,0,0,0,207,211,7,4,0,
        0,208,210,7,5,0,0,209,208,1,0,0,0,210,213,1,0,0,0,211,209,1,0,0,
        0,211,212,1,0,0,0,212,72,1,0,0,0,213,211,1,0,0,0,214,218,5,34,0,
        0,215,217,8,6,0,0,216,215,1,0,0,0,217,220,1,0,0,0,218,216,1,0,0,
        0,218,219,1,0,0,0,219,221,1,0,0,0,220,218,1,0,0,0,221,222,5,34,0,
        0,222,74,1,0,0,0,223,224,5,47,0,0,224,225,5,42,0,0,225,229,1,0,0,
        0,226,228,9,0,0,0,227,226,1,0,0,0,228,231,1,0,0,0,229,230,1,0,0,
        0,229,227,1,0,0,0,230,232,1,0,0,0,231,229,1,0,0,0,232,233,5,42,0,
        0,233,234,5,47,0,0,234,235,1,0,0,0,235,236,6,37,0,0,236,76,1,0,0,
        0,237,238,5,47,0,0,238,239,5,47,0,0,239,243,1,0,0,0,240,242,8,7,
        0,0,241,240,1,0,0,0,242,245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,
        0,0,244,246,1,0,0,0,245,243,1,0,0,0,246,247,7,7,0,0,247,248,1,0,
        0,0,248,249,6,38,0,0,249,78,1,0,0,0,250,251,7,8,0,0,251,252,1,0,
        0,0,252,253,6,39,0,0,253,80,1,0,0,0,8,0,195,198,205,211,218,229,
        243,1,6,0,0
    ]

class tlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    DOUBLE = 34
    INTEGER = 35
    ID = 36
    STRING = 37
    MULTINE_COMMENT = 38
    INLINE_COMMENT = 39
    WS = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'int'", "'double'", "'boolean'", "'void'", 
            "'{'", "'}'", "';'", "'='", "'++'", "'--'", "'return'", "'if'", 
            "'else'", "'while'", "'||'", "'&&'", "'=='", "'!='", "'<'", 
            "'<='", "'>'", "'>='", "'+'", "'-'", "'*'", "'/'", "'%'", "'!'", 
            "'false'", "'true'" ]

    symbolicNames = [ "<INVALID>",
            "DOUBLE", "INTEGER", "ID", "STRING", "MULTINE_COMMENT", "INLINE_COMMENT", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "DOUBLE", "INTEGER", "ID", "STRING", "MULTINE_COMMENT", 
                  "INLINE_COMMENT", "WS" ]

    grammarFileName = "tl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


